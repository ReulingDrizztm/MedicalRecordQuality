"""
Django settings for MedicalRecordQuality project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
cur_path = os.path.abspath(os.path.dirname(__file__))
root_path = os.path.split(cur_path)[0]
sys.path.append(root_path)  # 项目路径添加到系统路径
from Utils.loadingConfigure import Properties


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4#)0g8$7o0kn$t50pxw^8_!t)t!ti!sijf=ic0byho=%7&dpu('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'MedicalQuality',
    'RecordClient',
    'RecordClientTest',
]
AUTH_USER_MODEL = 'MedicalQuality.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'MedicalQuality.middleware.midPermission.MedicalQualityMiddleware',  # 权限系统中间件
]

ROOT_URLCONF = 'MedicalRecordQuality.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MedicalRecordQuality.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
DATABASE_NAME = Properties().properties.get('mongodb')
DATABASE_HOST = Properties().properties.get('mongo_host')
DATABASE_PORT = int(Properties().properties.get('mongo_port'))
DATABASE_USERNAME = Properties().properties.get('username_write_read')
DATABASE_PASSWORD = Properties().properties.get('password_write_read')
if Properties().properties.get('mongo_auth') == 'true' or Properties().properties.get('mongo_auth') == 'True':
    DATABASES = {
        'default': {
            'ENGINE': 'djongo',
            'ENFORCE_SCHEMA': True,
            'NAME': DATABASE_NAME,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
            'USER': DATABASE_USERNAME,
            'PASSWORD': DATABASE_PASSWORD,
            'AUTH_SOURCE': DATABASE_NAME,
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'djongo',
            'ENFORCE_SCHEMA': True,
            'NAME': DATABASE_NAME,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

SAFE_URL_BEFORE_LOGIN = [
    'login.html'
]

SAFE_URL = []

# 登陆前白名单
SAFE_INTERFACE_BEFORE_LOGIN = [
    '/med/MedicalQuality/userLoginPre.json',
    '/med/MedicalQuality/userLogin.json',

    '/med/RecordClient/processJsonFile.json',
    '/med/RecordClient/processJsonFileBingan.json',
    '/med/RecordClient/getClickCount.json',
    '/med/RecordClient/getClickCountIcon.json',
    '/med/RecordClient/doctorRank.json',
    '/med/RecordClient/deleteHuanjieResult.json',

    '/med/RecordClientTest/processJsonFile.json',
    '/med/RecordClientTest/processJsonFileBingan.json',
    '/med/RecordClientTest/getClickCount.json',
    '/med/RecordClientTest/getClickCountIcon.json',
    '/med/RecordClientTest/doctorRank.json',
    '/med/RecordClientTest/deleteHuanjieResult.json',
]

# 登陆后白名单
SAFE_INTERFACE = [
    '/med/MedicalQuality/userLogout.json',
    '/med/MedicalQuality/userModifyPassword.json',
    '/med/MedicalQuality/userSwitchDeptRole.json',
    '/med/MedicalQuality/userResetPassword.json',
]

SESSION_PERMISSION_URL_KEY = 'mrq_permission_url'
SESSION_PERMISSION_INTERFACE_KEY = 'mrq_permission_interface'

REGEX_URL = r'{url}'
REGEX_INTERFACE = r'^{interface}$'

SESSION_SAVE_EVERY_REQUEST = True  # 超时
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
